/*   Compiling AS to Flash 8 SWF using MTASC (free compiler - http://www.mtasc.org/):   mtasc -swf flv.swf -main -header 16:16:30 FLVPlayer.as -version 8   cd /projects/bolaji.net/v6/www/02/main/feature   /Applications/mtasc1.12/mtasc -cp "/Applications/Macromedia Flash 8/First Run/Classes" -swf carousel.swf Carousel.as -version 8*/import mx.remoting.Service;import mx.remoting.PendingCall;import mx.rpc.ResultEvent;import mx.rpc.FaultEvent;import mx.rpc.RelayResponder;import mx.utils.Delegate;import mx.remoting.debug.NetDebug;import mx.events.EventDispatcher;import flash.external.ExternalInterface; // wooimport mx.controls.Button;import mx.controls.CustomButton;import mx.transitions.Tween;import mx.transitions.easing.*;class Carousel extends MovieClip {// Constants:	public static var CLASS_REF		:Function	= Carousel;	public static var LINKAGE_ID	:String		= "Carousel";	public static var SymbolLinked	:Boolean	= Object.registerClass(LINKAGE_ID, CLASS_REF);	private var addEventListener	:Function;	private var removeEventListener	:Function;	private var dispatchEvent		:Function;	private var arrDataObjects		:Array;	private var mcImage				:MovieClip;	private var mcActive			:MovieClip;	private var mcInfo				:MovieClip;	private var btnWatchNow			:Button;	private var btnLink				:Button;	private var root				:Object;	private var active				:Number;	private var interval			:Object;// Initialization:	private function Carousel() {		EventDispatcher.initialize(this);		//delegate = new FlashRemoteDelegate();		this.root = _root;		this.initData();		this.initInterface();		this.active = 0;		this.animate();		this.addEventListener("action", Delegate.create(this, onActionHandler));		this.interval = setInterval(Delegate.create(this, startAnimate), 5000);	}	private function initData():Void {		arrDataObjects = new Array();		var videoinfo = new Object();		videoinfo.id = 1;		videoinfo.artistname = "Rugged Man"		videoinfo.videotitle = "Bangin'";		videoinfo.image = "rugged.man/rugged.man_bangin";		videoinfo.videoid = "6692";		arrDataObjects[0] = videoinfo;		videoinfo = new Object();		videoinfo.id = 2;		videoinfo.artistname = "FAZE"		videoinfo.videotitle = "Originality";		videoinfo.image = "faze/faze_originality";		videoinfo.videoid = "6691";		arrDataObjects[1] = videoinfo;		videoinfo = new Object();		videoinfo.id = 3;		videoinfo.artistname = "Lord of Ajasa / 9ice"		videoinfo.videotitle = "Le Fenu So";		videoinfo.image = "lord.of.ajasa/lord.of.ajasa-9ice_le_fenu_so";		videoinfo.videoid = "6689";		arrDataObjects[2] = videoinfo;		/**		var dataObj3 = new Object();		dataObj3.id = 3;		dataObj3.title = "LORD OF AJASA / 9ICE"		dataObj3.subtitle = "Le Fenu So";		dataObj3.image = "/swf/carousel/images/lord.of.ajasa-9ice_le_fenu_so.jpg";		dataObj3.thumb = "/swf/carousel/images/lord.of.ajasa-9ice_le_fenu_so_.jpg";		dataObj3.url = "/music/play/videos/6689";		arrDataObjects[2] = dataObj3;		**/	}	private function initInterface():Void {		for(var i=0; i < arrDataObjects.length; i++) {			var artistVideoInfo = arrDataObjects[i];			var mcThumb = MovieClip(this.attachMovie("Thumb", "mcThumb_" + i, this.getNextHighestDepth()));			mcThumb._x = 474;			mcThumb._y = 19 + (i * 57);			mcThumb.title.text = artistVideoInfo.artistname.toUpperCase();			mcThumb.subtitle.text = artistVideoInfo.videotitle;			mcThumb.mcImage_t.loadMovie("/Assets/music/video/" + artistVideoInfo.image + "_s.jpg");			mcThumb.onRelease = function() { this._parent.dispatchEvent({type:"action", target:this, source:"thumb"});}			//ExternalInterface.call("console.log", "initInterface() CarouselData title["+carouselData.title+"] subtitle["+carouselData.subtitle+"] image["+carouselData.image+"]");		}		if(arrDataObjects.length > 0) {			//this.root.btnLink.onRelease = Delegate.create(this, onClickHandler);			this.root.btnLink.txtLink.html = true;			this.root.btnLink.txtLink.htmlText = "<u>" + this.root.btnLink.txtLink.text +"</u>";			this.root.btnLink._x = 330;			this.root.btnLink._y = 225;			this.root.btnLink.onRelease = function() { this._parent.mcCarousel.dispatchEvent({type:"action", target:this._parent.mcCarousel, source:this});}			this.root.btnWatchNow._x = 330;			this.root.btnWatchNow._y = 195;			this.root.btnWatchNow.onRelease = function() { this._parent.mcCarousel.dispatchEvent({type:"action", target:this._parent.mcCarousel, source:this});}			this.mcActive = MovieClip(this.attachMovie("Active", "mcActive", this.getNextHighestDepth() - 6));			this.mcActive._x = 382;			this.mcActive._y = 10;			this.mcActive._width = this.mcActive._width - 5;		}	}	private function startAnimate():Void{		this.active = ((this.active + 1) >= arrDataObjects.length) ? 0 : (this.active + 1);		this.animate();	}	private function animate():Void {		//ExternalInterface.call("console.log", "thumb["+evt+"] id["+id+"] active["+this.active+"]");		var pos:Number = 10 + (this.active * 57);		var tween = new Tween(this.mcActive, "_y", Regular.easeOut, this.mcActive._y, pos, .3, true);		tween.onMotionFinished = function() { this._parent.dispatchEvent({type:"action", target:this._parent, source:this});}		var carouselData = arrDataObjects[this.active];		tween = new Tween(this.root.mcImage, "_alpha", Regular.easeOut, 100, 0, .5, true);		this.root.mcImage.loadMovie("/Assets/music/video/" + carouselData.image + "_l.jpg");		tween = new Tween(this.root.mcImage, "_alpha", Regular.easeOut, 0, 100, .5, true);		this.root.mcInfo.title.text = carouselData.artistname.toUpperCase();		this.root.mcInfo.subtitle.text = carouselData.videotitle;		//this._parent.dispatchEvent({type:"action", target:this, source:"thumb"});	}	private function thumbClick(evt:Object):Void {		var id:String = String(evt.target);		id = id.substr(id.lastIndexOf("_") + 1);		this.active = Number(id);		this.animate();	}	private function onActionHandler(evt:Object, delegate:Function):Void {		//ExternalInterface.call("console.log", "evt["+evt+"] target["+evt.target+"] source["+evt.source+"]");		switch(evt.source) {			case 				this.root.btnWatchNow : this.getURL("/music/play/videos/" + this.arrDataObjects[this.active].videoid);				break;			case 				this.root.btnLink : this.getURL("/music/videos/");				break;			case 				"thumb" : thumbClick(evt);				break;		}	}// Public Methods:	public function toString() : String {		return "Carousel";	}}